(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{169:function(n,a,e){"use strict";e.r(a);var t=e(0),r=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,a=n.$createElement,e=n._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"functional-light-javascript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functional-light-javascript","aria-hidden":"true"}},[n._v("#")]),n._v(" Functional-Light JavaScript")]),n._v(" "),e("p",[n._v('a function with arity 1 is also called "unary", a function with arity 2 is also called "binary", and a function with arity 3 or higher is called "n-ary".')]),n._v(" "),e("p",[n._v("Prcedure oriented style")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var numbers = [4, 10, 0, 27, 42, 17, 15, -6, 58]\nvar faves = []\nvar magicNumber = 0\n\npickFavoriteNumbers()\ncalculateMagicNumber()\noutputMsg()\n\nfunction calculateMagicNumber() {\n  for (let fave of faves) {\n    magicNumber = magicNumber + fave\n  }\n}\n\nfunction pickFavoriteNumbers() {\n  for (let num of numbers) {\n    if (num > 10 && num <= 20) {\n      faves.push(num)\n    }\n  }\n}\n\nfunction outputMsg() {\n  var msg = `The magic number number is: ${magicNumber}`\n  console.log(msg)\n}\n\n")])])]),e("p",[n._v("Function oriented style")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var sumOnlyFavorites = FP.compose([\n  FP.filterReducer( FP.gte( 10 ) ),\n  FP.filterReducer( FP.lte( 20 ) )\n])(sum)\n\nvar printMagicNumber = FP.pipe([\n  FP.reduce(sumOnlyFavorites, 0),\n  constructMsg,\n  console.log\n])\n\nvar numbers = [4,10,0,27,42,17,15,-6,58];\n\nprintMagicNumber( numbers );        // The magic number is: 42\n\n// ***************\nfunction sum(x,y) { return x + y; }\nfunction constructMsg(v) { return `The magic number is: ${v}`; }\n")])])]),e("h3",{attrs:{id:"function-input"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#function-input","aria-hidden":"true"}},[n._v("#")]),n._v(" Function Input")]),n._v(" "),e("h3",{attrs:{id:"defaulting-parameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#defaulting-parameters","aria-hidden":"true"}},[n._v("#")]),n._v(" Defaulting Parameters")]),n._v(" "),e("h3",{attrs:{id:"counting-inputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#counting-inputs","aria-hidden":"true"}},[n._v("#")]),n._v(" Counting Inputs")]),n._v(" "),e("p",[n._v('a function with arity 1 is also called "unary", a function width arity 2 is also called "binary", and a function with arity 3 or higher is called "n-ary"')]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function foo(x,y,z, ...args) {\n  console.log(x, y, z, args)\n}\n\nfoo();                  // undefined undefined undefined []\nfoo( 1, 2, 3 );         // 1 2 3 []\nfoo( 1, 2, 3, 4 );      // 1 2 3 [ 4 ]\nfoo( 1, 2, 3, 4, 5 );   // 1 2 3 [ 4, 5 ]\n")])])]),e("h3",{attrs:{id:"parameter-destructing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parameter-destructing","aria-hidden":"true"}},[n._v("#")]),n._v(" Parameter Destructing")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function foo() {\n  //...\n}\nfoo(...[1, 2, 3])\n")])])]),e("h2",{attrs:{id:"chapter-3-managing-function-inputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chapter-3-managing-function-inputs","aria-hidden":"true"}},[n._v("#")]),n._v(" Chapter 3: Managing Function Inputs")]),n._v(" "),e("h3",{attrs:{id:"all-for-one"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#all-for-one","aria-hidden":"true"}},[n._v("#")]),n._v(" All for One")]),n._v(" "),e("p",[n._v("function unary(fn) {\nreturn funtion onlyOneArg(arg) {\nreturn fn(arg)\n}\n}")]),n._v(" "),e("h3",{attrs:{id:"one-on-one"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#one-on-one","aria-hidden":"true"}},[n._v("#")]),n._v(" One On One")]),n._v(" "),e("blockquote",[e("p",[n._v("There are no small parts, only small actors")])]),n._v(" "),e("h3",{attrs:{id:"unchanging-one"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unchanging-one","aria-hidden":"true"}},[n._v("#")]),n._v(" unchanging One")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function constant(v) {\n  return function() {\n    return v\n  }\n}\n\n// or the ES6 => form\nvar constant =\n    v =>\n      () =>\n        v\n")])])]),e("h3",{attrs:{id:"adapting-arguments-to-parameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adapting-arguments-to-parameters","aria-hidden":"true"}},[n._v("#")]),n._v(" Adapting Arguments to Parameters")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// split Array -> parameters\nfunction foo(x,y) {\n  console.log( x + y );\n}\n\nfunction bar(fn) {\n  fn( [ 3, 9 ] );\n}\n\nfunction spreadArgs(fn) {\n  return function spreadFn(argsArr) {\n    return fn(...argsArr)\n  }\n}\n\nbar(spreadArgs(foo))\n\nvar spreadArgs =\n    fn =>\n      argsArr =>\n        fn(...argsArr)\n\n// gather paraments -> array\nfunction gatherArgs(fn) {\n  return function gatheredFn(...argsArr) {\n    return fn(argsArr)\n  }\n}\n\n// or the ES6 => arrows form\n\nvar gatherArgs =\n    fn => \n      (...argsArr) =>\n        fn(argsArr)\n\n\nfunction combineFirstTwo([ v1, v2 ]) {\n  return v1 + v2;\n}\n        \n[1,2,3,4,5].reduce( gatherArgs( combineFirstTwo ) );\n\n")])])]),e("h3",{attrs:{id:"some-now-some-later"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#some-now-some-later","aria-hidden":"true"}},[n._v("#")]),n._v(" Some Now, Some Later")]),n._v(" "),e("h2",{attrs:{id:"composing-functions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#composing-functions","aria-hidden":"true"}},[n._v("#")]),n._v(" Composing Functions")]),n._v(" "),e("p",[n._v("compose function evolution")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function compose(fn1, fn2) {\n  return composed(value) {\n    return fn1(fn2(value))\n  }\n}\n")])])]),e("p",[n._v("self defined compose function we could call it right-partial")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var compose =\n  (...fns) => \n    result => {\n      var list = [...fns]\n      while(list.length > 0) {\n        result = list.pop()(result)\n      }\n      return result\n    }\n\nfunction a(value) {\n  return value + '1'\n}\n\nfunction b(value) {\n  return value + '2'\n}\n\nfunction c(value) {\n  return value + '3'\n}\n\nvar test2 = compose(a, b, c)\n\ntest2(0)\n")])])]),e("p",[n._v("composition is helpful even if there's only one occurrence of something")]),n._v(" "),e("h2",{attrs:{id:"reduce-side-effect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reduce-side-effect","aria-hidden":"true"}},[n._v("#")]),n._v(" reduce side effect")]),n._v(" "),e("h3",{attrs:{id:"value-immutability"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#value-immutability","aria-hidden":"true"}},[n._v("#")]),n._v(" value immutability")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var s = new String('3333')\n\nvalue immutability does not mean we can't have values change over the course of our program.\n")])])]),e("p",[n._v("对待对象时，我们可以采用 复制 而不是 改变这个对象")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function updateLastLogin(user) {\n  var newUserRecord = Object.assign({}, user)\n  newUserRecord.lastLogin = Date.now()\n  return newUserRecord\n}\n\nvar user = {\n  //...\n}\n\nuser = updateLastLogin(user)\n\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var arr = [1,2,3];\n\nfoo( arr );\n\nconsole.log( arr[0] )\n\n\x3c!-- protect ourselves from a value being mutated --\x3e\n\nvar arr = [1,2,3];\n\nfoo( [...arr] );         // ha! a copy!\n\nconsole.log( arr[0] );      // 1\n\n")])])]),e("p",[n._v("第二种方式来避免Reassignment的方式")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const x = 3\nx = 5\n\n出现一种特殊情况 \nconst arr = [0]\narr[4] = 5\n\nconst 无法改变这种情况 java中使用final来解决这种情况，作为代码规范而言，你打算变化的变量使用 var或者let。不变的使用const,实际上const只是不可变的一种标志。\n")])])]),e("p",[n._v("针对数组出现的这种情况 我们可以使用concat")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const magicNums = [1,2,3]\nmagicNums = magicNums.concat(2)\n")])])]),e("p",[n._v("第三种 使用freeze")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var obj = Object.freeze([2]) // freeze是唯一一个 将对象和数组变为 read-only的\n\nvar test = Object.freeze( [ 2, 3, [4, 5] ] );\n\n// not allowed:\ntest[0] = 42;\n\n// oops, still allowed:\ntest[2][0] = 42;\n")])])]),e("h3",{attrs:{id:"和性能相关"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#和性能相关","aria-hidden":"true"}},[n._v("#")]),n._v(" 和性能相关")]),n._v(" "),e("p",[n._v("每次都给一个数组重新分配内存空间是比较耗费cpu性能的，并且会占用额外的内存，旧数据也会被垃圾回收，也增加了cpu的开销。\nimmutable.js")]),n._v(" "),e("h3",{attrs:{id:"如何对待呢"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何对待呢","aria-hidden":"true"}},[n._v("#")]),n._v(" 如何对待呢")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function compose(...fns) {\n    return function composed(result){\n        // copy the array of functions\n        var list = [...fns];\n\n        while (list.length > 0) {\n            // take the last function off the end of the list\n            // and execute it\n            result = list.pop()( result );\n        }\n\n        return result;\n    };\n}\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function compose(...fns) {\n  return function composed(result){\n  var list = [...fns]\n\n      while (list.length > 0) {\n          // take the last function off the end of the list\n          // and execute it\n          result = list.pop()( result );\n      }\n\n      return result;\n  };\n}\n\nvar f = compose( x => x / 3, x => x + 1, x => x * 2 );\n\nf( 4 );     // 3\n\nf( 4 );     // 4 <-- uh oh!\n")])])]),e("h2",{attrs:{id:"closure-and-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#closure-and-object","aria-hidden":"true"}},[n._v("#")]),n._v(" closure and Object")]),n._v(" "),e("h2",{attrs:{id:"recrusion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#recrusion","aria-hidden":"true"}},[n._v("#")]),n._v(" recrusion")])])}],!1,null,null,null);a.default=r.exports}}]);